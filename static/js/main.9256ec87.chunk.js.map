{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleAlphabetSort","setState","ALPHABET","handleLengthSort","LENGTH","handleReverse","handleReset","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAb,4MACEC,MAAkC,CAChCC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZJ,SAAUJ,EAASS,YARzB,EAYEC,iBAAmB,WACjB,EAAKF,SAAS,CACZJ,SAAUJ,EAASW,UAdzB,EAkBEC,cAAgB,WACd,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gBApBzB,EAwBEO,YAAc,WACZ,EAAKL,SAAS,CACZF,YAAY,EACZF,SAAUJ,EAASK,QA3BzB,4CA+BE,WACE,MAAiCS,KAAKX,MAA9BG,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,SACdW,EAtDH,SACLA,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAENU,EAAY,YAAOD,GAczB,OAZIX,IAAaJ,EAASS,UACxBO,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGtDf,IAAaJ,EAASW,QACxBK,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAGvDf,GACFU,EAAaM,UAGRN,EAoCSO,CAAkBtB,EAAiB,CAAEK,aAAYF,aAE/D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWpB,IAAaJ,EAASS,SAC7B,iBACA,0BACJiB,QAASZ,KAAKP,mBALhB,iCAUA,wBACEkB,KAAK,SACLD,UAAWpB,IAAaJ,EAASW,OAC7B,oBACA,6BACJe,QAASZ,KAAKJ,iBALhB,4BAUA,wBACEe,KAAK,SACLD,UAAWlB,EACP,oBACA,6BACJoB,QAASZ,KAAKF,cALhB,sBAUER,IAAaJ,EAASK,MAAQC,IAC9B,wBACEmB,KAAK,SACLD,UAAU,4BACVE,QAASZ,KAAKD,YAHhB,sBAWJ,6BACGE,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAlFpC,GAAyBC,aC9CzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9256ec87.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends Component<{}, ReorderOptions> {\n  state: Readonly<ReorderOptions> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleAlphabetSort = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleLengthSort = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.handleAlphabetSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.handleLengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}